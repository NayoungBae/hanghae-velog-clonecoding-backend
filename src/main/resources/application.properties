#spring.datasource.url=velogclone-db.c2atxwkzr3gk.ap-northeast-2.rds.amazonaws.com:3306/velogclone
#spring.datasource.username=admin
#spring.datasource.password=velogclone-db
#spring.jpa.hibernate.ddl-auto=update


#spring.datasource.url=jdbc:mysql://springboot-db.cnjcgago8zld.ap-northeast-2.rds.amazonaws.com:3306/myselectshop
#spring.datasource.username=admin
#spring.datasource.password=gkrwjaeoqkr1



#h2 : dev DB (개발 DB)
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:springcoredb
spring.datasource.username=sa
spring.datasource.password=



#dev DB (개발 DB)
#spring.datasource.url=jdbc:mysql://velog-database.cygpz0tq8qh5.ap-northeast-2.rds.amazonaws.com:3306/velog
#spring.datasource.username=admin
#spring.datasource.password=nayoung6382$



#spring.datasource.url=jdbc:mysql://velogclone-db.c2atxwkzr3gk.ap-northeast-2.rds.amazonaws.com:3306/velogclone
#spring.datasource.username=admin
#spring.datasource.password=velogclone-db
#spring.jpa.hibernate.ddl-auto=update



#spring.jpa.properties.hibernate.show_sql=true

# create-drop: 서버가 실행되면 테이블을 생성하는데,
#              이미 생성되어있는 테이블이 있으면 drop시키고 다시 생성
spring.jpa.hibernate.ddl-auto=create-drop



#query log : 콘솔에서 실행되는 쿼리문 확인하기
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true



# mark ? : 로그에 찍히는 쿼리에 '?'로 써져있는 것을 정확한 내용으로 채워줌
logging.level.org.hibernate.type.descriptor.sql=trace


# 사진 업로드 관련
spring.servlet.multipart.maxFileSize=100MB
spring.servlet.multipart.maxRequestSize=100MB